Template classes
================

This section demonstrates the high-level template classes.

z3c.pt.pagetemplate.PageTemplate
--------------------------------

  >>> from z3c.pt import PageTemplate

  >>> print PageTemplate("""\
  ... <div xmlns="http://www.w3.org/1999/xhtml">
  ...   Hello World!
  ... </div>""")()
  <div>
    Hello World!
  </div>

z3c.pt.pagetemplate.PageTemplateFile
------------------------------------

  >>> from z3c.pt import PageTemplateFile
  >>> from z3c.pt import tests
  >>> path = tests.__path__[0]
  >>> print PageTemplateFile(path+'/helloworld.pt')()
  <div>
    Hello World!
  </div>

z3c.pt.pagetemplate.ViewPageTemplate
------------------------------------

  >>> from z3c.pt import ViewPageTemplate
  
  >>> class ViewPageTemplateView(object):
  ...     __call__ = ViewPageTemplate(open(path+'/view.pt').read())
  ...     request = u'request'
  ...     context = u'context'

  >>> view = ViewPageTemplateView()
    
  >>> print view(test=u'test')
  <div>
    <span>&lt;ViewPageTemplateView object at ...&gt;</span>
    <span>context</span>
    <span>request</span>
    <span>test</span>
  </div>

z3c.pt.pagetemplate.ViewPageTemplateFile
----------------------------------------

  >>> from z3c.pt import ViewPageTemplateFile
  
  >>> class ViewPageTemplateView(object):
  ...     __call__ = ViewPageTemplateFile(path+'/view.pt')
  ...     request = u'request'
  ...     context = u'context'

  >>> view = ViewPageTemplateView()

  >>> print view(test=u'test')
  <div>
    <span>&lt;ViewPageTemplateView object at ...&gt;</span>
    <span>context</span>
    <span>request</span>
    <span>test</span>
  </div>

z3c.pt.texttemplate.ViewTextTemplate
------------------------------------

  >>> from z3c.pt import ViewTextTemplate
  
  >>> class ViewTextTemplateView(object):
  ...     __call__ = ViewTextTemplate(open(path+'/view.css').read())
  ...     request = u'request'
  ...     context = u'context'

  >>> view = ViewTextTemplateView()

  >>> print view(color=u'#ccc')
  #region {
      background: #ccc;
  }

z3c.pt.texttemplate.ViewTextTemplateFile
----------------------------------------

  >>> from z3c.pt import ViewTextTemplateFile
  
  >>> class ViewTextTemplateView(object):
  ...     __call__ = ViewTextTemplateFile(path+'/view.css')
  ...     request = u'request'
  ...     context = u'context'

  >>> view = ViewTextTemplateView()

  >>> print view(color=u'#ccc')
  #region {
      background: #ccc;
  }

Compiler integration
--------------------

Certain constructs require close collaboration between the template
compiler and the page template classes.

py:match integration

  >>> print PageTemplate("""\
  ... <div xmlns="http://www.w3.org/1999/xhtml"
  ...      xmlns:py="http://genshi.edgewall.org">
  ...   <py:match path="xmlns:greeting">Hello ${select('@name')[0]}!</py:match>
  ...   <greeting name="World" />
  ... </div>
  ... """)()
  <div>
    Hello World!
  <BLANKLINE>
  </div>

Error handling
--------------

When an exception is raised which does not expose a bug in the TAL
translation machinery, we expect the exception to contain the part of
the template source that caused the exception.

Exception while evaluating expression:

  >>> from z3c.pt import PageTemplate
  >>> PageTemplate("""\
  ... <div xmlns="http://www.w3.org/1999/xhtml"
  ...      xmlns:tal="http://xml.zope.org/namespaces/tal">
  ...   <span tal:content="range()" />
  ... </div>""").render()
  Traceback (most recent call last):
    ...
  TypeError: range expected at least 1 arguments, got 0

Exception while evaluating definition:

  >>> from z3c.pt import PageTemplate
  >>> PageTemplate("""\
  ... <div xmlns="http://www.w3.org/1999/xhtml"
  ...      xmlns:tal="http://xml.zope.org/namespaces/tal">
  ...   <span tal:define="dummy range()" />
  ... </div>""").render()
  Traceback (most recent call last):
    ...
  TypeError: range expected at least 1 arguments, got 0

Exception while evaluating interpolation:

  >>> from z3c.pt import PageTemplate
  >>> PageTemplate("""\
  ... <div xmlns="http://www.w3.org/1999/xhtml"
  ...      xmlns:tal="http://xml.zope.org/namespaces/tal">
  ...   <span>${range()}</span>
  ... </div>""").render()
  Traceback (most recent call last):
    ...
  TypeError: range expected at least 1 arguments, got 0
